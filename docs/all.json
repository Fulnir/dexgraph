{"shell":true,"revision":"0a5bc174c8e90802e1ee1d493bfca1db3888cb2f","objects":[{"type":null,"source":"lib/dexgraph.ex:2","object_type":"ModuleObject","moduledoc":"\n## A simple http based driver for dgraph.\n\n#### dgraph is located at [dgraph.io](http://www.dgraph.io)\n\n### Constants\n\n* `@unique_predicates` All unique predicates are defined in this constant.\nUsed in `is_unique_predicate?()`\n\nCopyright © 2018 Edwin Buehler. All rights reserved.\n","module":"Elixir.DexGraph","id":"DexGraph"},{"type":"def","source":"lib/dexgraph.ex:60","signature":[["a_query",[],null]],"object_type":"FunctionObject","name":"alter","module_id":"DexGraph","id":"alter/1","doc":"Sendet eine dgraph query zum server\n","arity":1},{"type":"def","source":"lib/dexgraph.ex:208","signature":[["predicate",[],null]],"object_type":"FunctionObject","name":"is_unique_predicate?","module_id":"DexGraph","id":"is_unique_predicate?/1","doc":"This function check if the given predicate is unique. If so, then only one edge\nis allowed per node with this predicate. All unique predicates\nare defined in `@unique_predicates`.\n\nThe predicate <id> is mostly unique. The predicate <name> not\n\nSample list: ```@unique_predicates [:id]```\n\n## Examples\n\n    iex> DexGraph.is_unique_predicate?(:id)\n    true\n\n","arity":1},{"type":"def","source":"lib/dexgraph.ex:196","signature":[["node_struct",[],null]],"object_type":"FunctionObject","name":"mutate_node","module_id":"DexGraph","id":"mutate_node/1","doc":"Erzeugt einen Knoten.\n\n","arity":1},{"type":"def","source":"lib/dexgraph.ex:154","signature":[["predicate",[],null],["object",[],null]],"object_type":"FunctionObject","name":"mutate_node","module_id":"DexGraph","id":"mutate_node/2","doc":"Erzeugt einen neuen Knoten. Nur das Prädikat und das Objekt werden benötigt.\n\n## Examples\n\n    iex> {:ok, node} = DexGraph.mutate_node(\"name\", \"Edwin Bühler\")\n    ...>node[\"code\"]\n    \"Success\"\n\n","arity":2},{"type":"def","source":"lib/dexgraph.ex:175","signature":[["subject_uid",[],null],["predicate",[],null],["object",[],null]],"object_type":"FunctionObject","name":"mutate_node","module_id":"DexGraph","id":"mutate_node/3","doc":"Erzeugt einen neuen Knoten. Nicht nur das Prädikat und das Objekt werden benötigt,\nsondern auch die Subjekt-uid.\n\n## Examples\n\n    iex> {:ok, node} = DexGraph.mutate_node(\"0x1be\", \"name\", \"Edwin Bühler\")\n    ...>node[\"code\"]\n    \"Success\"\n\n","arity":3},{"type":"def","source":"lib/dexgraph.ex:68","signature":[["a_query",[],null]],"object_type":"FunctionObject","name":"mutate_with_commit","module_id":"DexGraph","id":"mutate_with_commit/1","doc":"Sendet ein dgraph mutate zum server\n","arity":1},{"type":"def","source":"lib/dexgraph.ex:43","signature":[["a_query",[],null]],"object_type":"FunctionObject","name":"query","module_id":"DexGraph","id":"query/1","doc":"Returns the query result.\n\ndgraph docs: [Query Language](https://docs.dgraph.io/query-language/)\n\n## Examples\n\n    iex> DexGraph.query(\"schema(pred: [name]) {index}\")\n    {:ok, %{\"schema\" => [%{\"index\" => true, \"predicate\" => \"name\"}]}}\n\n","arity":1},{"type":"def","source":"lib/dexgraph.ex:116","signature":[["predicate",[],null],["object",[],null]],"object_type":"FunctionObject","name":"query_node","module_id":"DexGraph","id":"query_node/2","doc":"Returns a node for the given predicate and object.\n\nIf no node found, it returns `{:not_found, %{\"find_node\" => []}}`\n\n## Examples\n\n    iex> DexGraph.query_node(\"name\", \"Object Name\")\n    {:not_found, %{\"find_node\" => []}}\n\n","arity":2},{"type":"def","source":"lib/dexgraph.ex:105","signature":[],"object_type":"FunctionObject","name":"query_schema","module_id":"DexGraph","id":"query_schema/0","doc":"Returns the dgraph schema query result.\n\ndgraph query `schema {}`\n\ndgraph docs:[Querying Schema](https://docs.dgraph.io/query-language/#querying-schema)\n\n","arity":0},{"type":"def","source":"lib/dexgraph.ex:34","signature":[["schema",[],null]],"object_type":"FunctionObject","name":"write_schema","module_id":"DexGraph","id":"write_schema/1","doc":"Add or modify the database schema.\n\ndgraph docs: [Adding or Modifying Schema](https://docs.dgraph.io/query-language/#adding-or-modifying-schema)\n","arity":1},{"type":"def","source":"lib/dexgraph.ex:26","signature":[["test_data",[],null]],"object_type":"FunctionObject","name":"write_testing_data","module_id":"DexGraph","id":"write_testing_data/1","doc":"This function is used to setup the test data for the\nunit tests. Called in `DexGraphTest.setup_all()`\n","arity":1}],"language":"elixir","git_repo_url":"origin","client_version":"0.5.6","client_name":"inch_ex","branch_name":"develop","args":["--help"]}